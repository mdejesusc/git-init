--------------------------------------------------------
-- Archivo creado  - jueves-agosto-01-2019   
--------------------------------------------------------
--------------------------------------------------------
--  DDL for Package Body GCE
--------------------------------------------------------

  CREATE OR REPLACE PACKAGE BODY "C624_000"."GCE" AS

  PROCEDURE SP_LOGGING (
    P_SP_NAME IN CAPTAINS_LOG.SP_NAME%TYPE,
    P_ERROR_USR IN CAPTAINS_LOG.ERROR_USR%TYPE,
    P_ERROR_ORA IN CAPTAINS_LOG.ERROR_ORA%TYPE,
    P_MESSAGE_ORA IN CAPTAINS_LOG.MESSAGE_ORA%TYPE)
  AS
  BEGIN
    INSERT INTO CAPTAINS_LOG VALUES(
      P_SP_NAME,
      P_ERROR_USR,
      P_ERROR_ORA,
      P_MESSAGE_ORA,
      CURRENT_TIMESTAMP);
    COMMIT;
  END SP_LOGGING;

  PROCEDURE SP_GENERATE_MESSAGE_NUMBER (
    P_ACCOUNTING_BRANCH IN MESSAGE_NUMBER.ACCOUNTING_BRANCH%TYPE,
    P_ACCOUNTING_CASH IN MESSAGE_NUMBER.ACCOUNTING_CASH%TYPE,
    P_MESSAGE_NUMBER OUT MESSAGE_NUMBER.MESSAGE_NUMBER%TYPE)
  AS
  BEGIN
    SELECT COUNT(*) INTO P_MESSAGE_NUMBER FROM MESSAGE_NUMBER WHERE
      ACCOUNTING_BRANCH = P_ACCOUNTING_BRANCH AND
      ACCOUNTING_CASH = P_ACCOUNTING_CASH AND
      TO_CHAR(MESSAGE_DATE,'yyyymmdd') = TO_CHAR(CURRENT_DATE,'yyyymmdd');
      
    IF P_MESSAGE_NUMBER = 0 THEN
      DELETE FROM "C624_000"."MESSAGE_NUMBER" WHERE
        TO_NUMBER(TO_CHAR(MESSAGE_DATE,'yyyymmdd')) < TO_NUMBER(TO_CHAR(CURRENT_DATE,'yyyymmdd'));
    END IF;
      
    P_MESSAGE_NUMBER := P_MESSAGE_NUMBER + 1;
    
    INSERT INTO MESSAGE_NUMBER VALUES (
      P_ACCOUNTING_BRANCH,
      P_ACCOUNTING_CASH,
      CURRENT_DATE,
      P_MESSAGE_NUMBER,
      CURRENT_TIMESTAMP);
    COMMIT;
    EXCEPTION
      WHEN DUP_VAL_ON_INDEX THEN
        P_MESSAGE_NUMBER := -1;
        SP_LOGGING('SP_GENERATE_MESSAGE_NUMBER',P_MESSAGE_NUMBER,SQLCODE,SUBSTR(SQLERRM ,1,240));
      WHEN OTHERS THEN
        P_MESSAGE_NUMBER := -2;
        SP_LOGGING('SP_GENERATE_MESSAGE_NUMBER',P_MESSAGE_NUMBER,SQLCODE,SUBSTR(SQLERRM ,1,240));
  END SP_GENERATE_MESSAGE_NUMBER;
  
  PROCEDURE SP_VALIDATE_USER (
    P_USER_NAME IN VARCHAR2
    , P_USER_PW IN VARCHAR2 
    , P_RESULT OUT INTEGER)
  AS
  BEGIN
    SELECT COUNT(*) INTO P_RESULT FROM AUTHENTICATION
      WHERE USER_NAME=P_USER_NAME AND USER_PW=P_USER_PW;
    EXCEPTION
      WHEN OTHERS THEN
        P_RESULT := -1;
        SP_LOGGING('SP_VALIDATE_USER',P_RESULT,SQLCODE,SUBSTR(SQLERRM ,1,240));
  END SP_VALIDATE_USER;
  
  PROCEDURE SP_INSERT_INTO_TB_TEST (
    P_TIMES IN INTEGER,
    P_ID IN VARCHAR2)
  AS
  begin
    for i in 1 .. P_TIMES
      loop
        insert into tb_test values(P_ID,'1','1',to_char(i));
      end loop;
      commit;
  END SP_INSERT_INTO_TB_TEST;
  
  PROCEDURE SP_DELETE_MASSIVE_ALL (
    P_RECORDS IN INTEGER,
    P_ID IN VARCHAR2)
  AS
  begin
    loop
      delete from tb_test where column1 = P_ID and rownum <= P_RECORDS;
      exit when sql%rowcount = 0;
      commit;
    end loop;
    commit;
  END SP_DELETE_MASSIVE_ALL;
  
  PROCEDURE SP_DELETE_MASSIVE_CHUNK (
    P_RECORDS IN INTEGER,
    P_ID IN VARCHAR2)
  AS
  begin
    delete from tb_test where column1 = P_ID and rownum <= P_RECORDS;
    commit;
  END SP_DELETE_MASSIVE_CHUNK;

END GCE;

/
